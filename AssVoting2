[root@ip-172-31-31-112 k8s-specifications]# cd /root/example-voting-app/k8s-specifications
[root@ip-172-31-31-112 k8s-specifications]# ll
total 36
-rw-r--r-- 1 root root 401 May 16 10:29 db-deployment.yaml
-rw-r--r-- 1 root root 146 May 16 10:29 db-service.yaml
-rw-r--r-- 1 root root 402 May 16 10:29 redis-deployment.yaml
-rw-r--r-- 1 root root 152 May 16 10:29 redis-service.yaml
-rw-r--r-- 1 root root 299 May 16 10:29 result-deployment.yaml
-rw-r--r-- 1 root root 195 May 16 10:29 result-service.yaml
-rw-r--r-- 1 root root 289 May 16 10:29 vote-deployment.yaml
-rw-r--r-- 1 root root 192 May 16 10:29 vote-service.yaml
-rw-r--r-- 1 root root 292 May 16 10:29 worker-deployment.yaml
[root@ip-172-31-31-112 k8s-specifications]# kubectl apply -f .
deployment.apps/db created
service/db created
deployment.apps/redis created
service/redis created
deployment.apps/result created
service/result created
deployment.apps/vote created
service/vote created
deployment.apps/worker created


[root@ip-172-31-31-112 k8s-specifications]# kubectl get svc -o wide
NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE   SELECTOR
db           ClusterIP   10.101.204.70    <none>        5432/TCP         30s   app=db
kubernetes   ClusterIP   10.96.0.1        <none>        443/TCP          3m    <none>
redis        ClusterIP   10.108.215.250   <none>        6379/TCP         30s   app=redis
result       NodePort    10.105.52.219    <none>        5001:31001/TCP   30s   app=result
vote         NodePort    10.107.202.191   <none>        5000:31000/TCP   30s   app=vote

[root@ip-172-31-31-112 k8s-specifications]# kubectl get rs -o wide
NAME                DESIRED   CURRENT   READY   AGE   CONTAINERS   IMAGES                                         SELECTOR
db-b54cd94f4        1         1         1       52s   db           postgres:9.3                                   app=db,pod-template-hash=b54cd94f4
redis-868d64d78     1         1         1       52s   redis        redis:alpine                                   app=redis,pod-template-hash=868d64d78
result-5d57b59f4b   1         1         1       52s   result       dockersamples/examplevotingapp_result:before   app=result,pod-template-hash=5d57b59f4b
vote-94849dc97      1         1         1       52s   vote         dockersamples/examplevotingapp_vote:before     app=vote,pod-template-hash=94849dc97
worker-dd46d7584    1         1         1       52s   worker       dockersamples/examplevotingapp_worker          app=worker,pod-template-hash=dd46d7584
[root@ip-172-31-31-112 k8s-specifications]# kubectl get pods
NAME                      READY   STATUS    RESTARTS   AGE
db-b54cd94f4-z4mtd        1/1     Running   0          83s
redis-868d64d78-pf72s     1/1     Running   0          83s
result-5d57b59f4b-xp92x   1/1     Running   0          83s
vote-94849dc97-zvt99      1/1     Running   0          83s
worker-dd46d7584-6mmjt    1/1     Running   0          83s

[root@ip-172-31-31-112 k8s-specifications]# kubectl delete pod vote-94849dc97-zvt99
pod "vote-94849dc97-zvt99" deleted


[root@ip-172-31-31-112 k8s-specifications]# kubectl get pods
NAME                      READY   STATUS    RESTARTS   AGE
db-b54cd94f4-z4mtd        1/1     Running   0          3m18s
redis-868d64d78-pf72s     1/1     Running   0          3m18s
result-5d57b59f4b-xp92x   1/1     Running   0          3m18s
vote-94849dc97-vp7xb      1/1     Running   0          86s
worker-dd46d7584-6mmjt    1/1     Running   0          3m18s
[root@ip-172-31-31-112 k8s-specifications]# kubectl logs vote-94849dc97-vp7xb
[2023-05-17 13:44:43 +0000] [1] [INFO] Starting gunicorn 20.1.0
[2023-05-17 13:44:43 +0000] [1] [INFO] Listening at: http://0.0.0.0:80 (1)
[2023-05-17 13:44:43 +0000] [1] [INFO] Using worker: sync
[2023-05-17 13:44:43 +0000] [6] [INFO] Booting worker with pid: 6
[2023-05-17 13:44:43 +0000] [7] [INFO] Booting worker with pid: 7
[2023-05-17 13:44:43 +0000] [8] [INFO] Booting worker with pid: 8
[2023-05-17 13:44:43 +0000] [9] [INFO] Booting worker with pid: 9



[root@ip-172-31-31-112 k8s-specifications]# kubectl delete pod db-b54cd94f4-z4mtd
pod "db-b54cd94f4-z4mtd" deleted
[root@ip-172-31-31-112 k8s-specifications]# kubectl get pods
NAME                      READY   STATUS    RESTARTS   AGE
db-b54cd94f4-4l5nh        1/1     Running   0          42s
redis-868d64d78-pf72s     1/1     Running   0          6m11s
result-5d57b59f4b-xp92x   1/1     Running   1          6m11s
vote-94849dc97-vp7xb      1/1     Running   0          4m19s
worker-dd46d7584-6mmjt    1/1     Running   1          6m11s
[root@ip-172-31-31-112 k8s-specifications]# kubectl logs db-b54cd94f4-4l5nh
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale "en_US.utf8".
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

fixing permissions on existing directory /var/lib/postgresql/data ... ok
creating subdirectories ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
creating configuration files ... ok
creating template1 database in /var/lib/postgresql/data/base/1 ... ok
initializing pg_authid ... ok
setting password ... ok
initializing dependencies ... ok
creating system views ... ok
loading system objects' descriptions ... ok
creating collations ... ok
creating conversions ... ok
creating dictionaries ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
loading PL/pgSQL server-side language ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok
copying template1 to postgres ... ok
syncing data to disk ... ok

WARNING: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    postgres -D /var/lib/postgresql/data
or
    pg_ctl -D /var/lib/postgresql/data -l logfile start

****************************************************
WARNING: No password has been set for the database.
         This will allow anyone with access to the
         Postgres port to access your database. In
         Docker's default configuration, this is
         effectively any other container on the same
         system.

         Use "-e POSTGRES_PASSWORD=password" to set
         it in "docker run".
****************************************************
waiting for server to start....LOG:  database system was shut down at 2023-05-17 13:48:22 UTC
LOG:  MultiXact member wraparound protections are now enabled
LOG:  database system is ready to accept connections
LOG:  autovacuum launcher started
 done
server started

/usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*

LOG:  received fast shutdown request
LOG:  aborting any active transactions
LOG:  autovacuum launcher shutting down
LOG:  shutting down
waiting for server to shut down....LOG:  database system is shut down
 done
server stopped

PostgreSQL init process complete; ready for start up.

LOG:  database system was shut down at 2023-05-17 13:48:23 UTC
LOG:  MultiXact member wraparound protections are now enabled
LOG:  database system is ready to accept connections
LOG:  autovacuum launcher started
ERROR:  relation "votes" does not exist at character 38
STATEMENT:  SELECT vote, COUNT(id) AS count FROM votes GROUP BY vote
ERROR:  relation "votes" does not exist at character 38
STATEMENT:  SELECT vote, COUNT(id) AS count FROM votes GROUP BY vote
ERROR:  relation "votes" does not exist at character 38
STATEMENT:  SELECT vote, COUNT(id) AS count FROM votes GROUP BY vote



After deletion of DB all result have been lost this because volume is on the container.
In order to make all working fine need to:

- make all PODs / service running
- make sure that volume is on host node (actually the best is to have it persisante, mounted on NFS with PV / PVC logic)



cp db-deployment.yaml cris2.db-deployment.yaml

[root@ip-172-31-31-112 k8s-specifications]# cat cris2.db-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - image: postgres:9.3
        name: db
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
      volumes:
      - name: db-data
        hostPath:
         path: /tmp/votedb



[root@ip-172-31-31-112 k8s-specifications]# kubectl apply -f cris2.db-deployment.yaml
deployment.apps/db configured

[root@ip-172-31-27-149 votedb]# pwd
/tmp/votedb
[root@ip-172-31-27-149 votedb]# ll
total 48
drwx------ 5 libstoragemgmt input    41 May 17 14:13 base
drwx------ 2 libstoragemgmt input  4096 May 17 14:13 global
drwx------ 2 libstoragemgmt input    18 May 17 14:13 pg_clog
-rw------- 1 libstoragemgmt input  4500 May 17 14:13 pg_hba.conf
-rw------- 1 libstoragemgmt input  1636 May 17 14:13 pg_ident.conf
drwx------ 4 libstoragemgmt input    36 May 17 14:13 pg_multixact
drwx------ 2 libstoragemgmt input    18 May 17 14:13 pg_notify
drwx------ 2 libstoragemgmt input     6 May 17 14:13 pg_serial
drwx------ 2 libstoragemgmt input     6 May 17 14:13 pg_snapshots
drwx------ 2 libstoragemgmt input     6 May 17 14:13 pg_stat
drwx------ 2 libstoragemgmt input    63 May 17 14:15 pg_stat_tmp
drwx------ 2 libstoragemgmt input    18 May 17 14:13 pg_subtrans
drwx------ 2 libstoragemgmt input     6 May 17 14:13 pg_tblspc
drwx------ 2 libstoragemgmt input     6 May 17 14:13 pg_twophase
-rw------- 1 libstoragemgmt input     4 May 17 14:13 PG_VERSION
drwx------ 3 libstoragemgmt input    60 May 17 14:13 pg_xlog
-rw------- 1 libstoragemgmt input 20120 May 17 14:13 postgresql.conf
-rw------- 1 libstoragemgmt input    37 May 17 14:13 postmaster.opts
-rw------- 1 libstoragemgmt input    85 May 17 14:13 postmaster.pid




